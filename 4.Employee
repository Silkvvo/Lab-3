import java.util.Date;
import java.util.Vector;
import java.util.Comparator;

public class Main {
    static class Person {
        protected String name;
        public Person(String name) {
            this.name = name;
        }
        @Override
        public String toString() {
            return "Person [name=" + name + "]";
        }
        @Override
        public boolean equals(Object obj) {
            if (this == obj)
                return true;
            if (obj == null || getClass() != obj.getClass())
                return false;
            Person person = (Person) obj;
            return name.equals(person.name);
        }
    }
    static class Employee extends Person {
    private double annualSalary;
    private Date hireDate;
    private String nationalInsuranceNumber;

    public Employee(String name, double annualSalary, Date hireDate, String nationalInsuranceNumber) {
        super(name);
        this.annualSalary = annualSalary;
        this.hireDate = hireDate;
        this.nationalInsuranceNumber = nationalInsuranceNumber;
    }
    public Employee(Employee other) {
        super(other.name);
        this.annualSalary = other.annualSalary;
        this.hireDate = new Date(other.hireDate.getTime());
        this.nationalInsuranceNumber = other.nationalInsuranceNumber;
    }
    public double getAnnualSalary() {
        return annualSalary;
    }
    public Date getHireDate() {
        return hireDate;
    }
    public String getNationalInsuranceNumber() {
        return nationalInsuranceNumber;
    }
    @Override
    public String toString() {
        return "Employee [name=" + name + ", annualSalary=" + annualSalary + ", hireDate=" + hireDate + ", nationalInsuranceNumber=" + nationalInsuranceNumber + "]";
    }
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null || getClass() != obj.getClass())
            return false;
        if (!super.equals(obj))
            return false;
        Employee employee = (Employee) obj;
        return Double.compare(employee.annualSalary, annualSalary) == 0 && hireDate.equals(employee.hireDate) && nationalInsuranceNumber.equals(employee.nationalInsuranceNumber);
    }
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
        }
    }
}
